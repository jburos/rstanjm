% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print-and-summary.R
\name{summary.stanjm}
\alias{as.data.frame.summary.stanjm}
\alias{print.summary.stanjm}
\alias{summary.stanjm}
\title{Summary method for stanjm objects}
\usage{
\method{summary}{stanjm}(object, pars = NULL, regex_pars = NULL,
  probs = NULL, digits = 3, ...)

\method{print}{summary.stanjm}(x, digits = max(1, attr(x, "print.digits")),
  ...)

\method{as.data.frame}{summary.stanjm}(x, ...)
}
\arguments{
\item{object}{A fitted model object returned by the
\code{\link{stan_jm}} modelling function. See \code{\link{stanjm-object}}.}

\item{pars}{An optional character vector specifying a subset of parameters to
display. Parameters can be specified by name or several shortcuts can be 
used. 
Using \code{pars = "long"} will display the 
parameter estimates for the longitudinal submodels only (excluding random
effects, but including dispersion parameters).
Using \code{pars = "event"} will display the 
parameter estimates for the event submodel only, including any association
parameters. 
Using \code{pars = "assoc"} will display only the 
association parameters. 
Using \code{pars = "fixef"} will display all fixed effects, but not
the random effects or the additional parameters such as dispersion, etc. 
Using \code{pars = "beta"} will display only the 
fixed effect regression coefficients (excluding the intercept terms).
Using \code{pars = "alpha"} will display only the 
fixed effect intercept terms.
The estimates for the random effects can be selected using \code{pars = "b"}
or \code{pars = "varying"}.
See \strong{Examples}.
If both \code{pars} and \code{regex_pars} are set to \code{NULL} then all 
fixed effect regression coefficients are selected, as well as any 
additional parameters such as the residual error, dispersion,
or baseline hazard parameters, and the log posterior.}

\item{regex_pars}{An optional character vector of \link[=grep]{regular 
expressions} to use for parameter selection. \code{regex_pars} can be used
in place of \code{pars} or in addition to \code{pars}.}

\item{probs}{An optional numeric vector of probabilities passed to 
\code{\link[stats]{quantile}}, for calculating the quantiles of the 
posterior distribution for each parameter.}

\item{digits}{Number of digits to use for formatting numbers when printing. 
When calling \code{summary}, the value of digits is stored as the 
\code{"print.digits"} attribute of the returned object.}

\item{...}{Currently ignored.}

\item{x}{An object of class \code{"summary.stanjm"}.}
}
\value{
The \code{summary} method returns an object of class 
  \code{"summary.stanjm"}, which is a matrix of summary statistics and 
  diagnostics, with additional information stored as attributes.
  The \code{print} method for \code{summary.stanjm}
  objects is called for its side effect and just returns its input. The 
  \code{as.data.frame} method for \code{summary.stanjm} objects converts 
  the matrix to a data.frame, preserving row and column names but dropping  
  the \code{print}-related attributes.
}
\description{
The \code{summary} method for \code{\link[=stanjm-object]{stanjm}}
objects returns a summary of parameter estimates and MCMC convergence diagnostics 
(Monte Carlo error, effective sample size, Rhat) for a joint model fitted
using the \code{\link{stan_jm}} modelling function.
}
\examples{
if (!exists("examplejm")) example(examplejm)

# Only showing 10th and 90th percentile   
summary(examplejm, probs = c(0.1, 0.9))

# These produce the same output for this example, 
# but the first method can be used for any model
summary(examplejm, pars = c("long"))
summary(examplejm, pars = c("Long1|(Intercept)",
                             "Long1|year", 
                             "Long1|sigma")) 

# Only show parameters for event submodel
summary(examplejm, pars = "event")

# Only show the association parameter for the current
# value of the linear predictor from the longitudinal submodel
summary(examplejm, pars = "Assoc|Long1:eta-value")
# or since there is only one association parameter in the 
# model we can just use the following shortcut
summary(examplejm, pars = "assoc")
  
# Only show random effects parameters
summary(examplejm, pars = "b")
as.data.frame(summary(examplejm, pars = "b"))
 
# To obtain only the random intercepts we could also use a
# regular expression in the regex argument as follows
summary(examplejm, pars = NULL,
        regex_pars = "\\\\(Intercept\\\\)\\\\sid")
 
}
\seealso{
\code{\link{print.stanjm}}, \code{\link{stanjm-methods}}
}

