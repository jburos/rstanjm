% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stan_jm.R
\name{stan_jm}
\alias{stan_jm}
\title{Bayesian joint longitudinal and time-to-event models via Stan}
\usage{
stan_jm(formulaLong, dataLong, formulaEvent, dataEvent, time_var, id_var,
  family = gaussian, assoc = "etavalue", base_haz = c("weibull",
  "splines", "piecewise"), df, knots, quadnodes = 15, subsetLong, subsetEvent,
  na.action = getOption("na.action", "na.omit"), weights, offset, contrasts,
  centreLong = FALSE, centreEvent = FALSE, init = "model_based", ...,
  priorLong = normal(), priorLong_intercept = normal(),
  priorLong_ops = priorLong_options(), priorEvent = normal(),
  priorEvent_intercept = normal(), priorEvent_ops = priorEvent_options(),
  priorAssoc = normal(), priorAssoc_ops = priorAssoc_options(),
  prior_covariance = decov(), prior_PD = FALSE, adapt_delta = NULL,
  max_treedepth = NULL, QR = FALSE, algorithm = c("sampling", "meanfield",
  "fullrank"), debug = FALSE)
}
\arguments{
\item{formulaLong}{A two-sided linear formula object describing both the 
fixed-effects and random-effects parts of the longitudinal submodel  
(see \code{\link[lme4]{glmer}} for details). For a multivariate joint 
model (i.e. more than one longitudinal marker) this should 
be a list of such formula objects, with each element
of the list providing the formula for one of the longitudinal submodels.}

\item{dataLong}{A data frame containing the variables specified in
\code{formulaLong}. If fitting a multivariate joint model, then this can
be either a single data frame which contains the data/variables for all 
the longitudinal submodels, or it can be a list of data frames where each
element of the list provides the data for one of the longitudinal 
submodels.}

\item{formulaEvent}{A two-sided formula object describing the event
submodel. The left hand side of the formula should be a \code{Surv()} 
object. See \code{\link[survival]{Surv}}.}

\item{dataEvent}{A data frame containing the variables specified in
\code{formulaEvent}.}

\item{time_var}{A character string specifying the name of the variable 
in \code{dataLong} which represents time.}

\item{id_var}{A character string specifying the name of the variable in
\code{dataLong} which distinguishes between individuals. This can be
left unspecified if there is only one grouping factor (which is assumed
to be the individual). If there is more than one grouping factor (i.e.
clustering beyond the level of the individual) then the \code{id_var}
argument must be specified.}

\item{family}{The family (and possibly also the link function) for the 
longitudinal submodel(s). See \code{\link[lme4]{glmer}} for details. 
If fitting a multivariate joint model, then this can optionally be a
list of families, in which case each element of the list specifies the
family for one of the longitudinal submodels.}

\item{assoc}{A character string or character vector specifying the joint
model association structure. Possible association structures that can
be used include: "etavalue" (the default); "etaslope"; "muvalue"; 
"shared_b"; "shared_coef"; or "null". These are described in the 
\strong{Details} section below. For a multivariate joint model, 
different association structures can optionally be used for 
each longitudinal submodel by specifying a list of character
vectors, with each element of the list specifying the desired association 
structure for one of the longitudinal submodels. Specifying \code{assoc = NULL}
will fit a joint model with no association structure (equivalent  
to fitting separate longitudinal and time-to-event models). See the
\strong{Examples} section below.}

\item{base_haz}{A character string indicating which baseline hazard to use
for the event submodel. Options are a Weibull baseline hazard
(\code{"weibull"}, the default), a B-splines approximation estimated 
for the log baseline hazard (\code{"splines"}), or a piecewise
constant baseline hazard (\code{"piecewise"}).}

\item{df}{An optional positive integer specifying the degrees of freedom 
for the B-splines if \code{base_haz = "splines"}, or the number of
intervals used for the piecewise constant baseline hazard if 
\code{base_haz = "piecewise"}. The default is 6.}

\item{knots}{An optional numeric vector specifying the internal knot 
locations for the B-splines if \code{base_haz = "splines"}, or the 
internal cut-points for defining intervals of the piecewise constant 
baseline hazard if \code{base_haz = "piecewise"}. Knots cannot be
specified if \code{df} is specified. If not specified, then the 
default is to use \code{df - 4} knots if \code{base_haz = "splines"},
or \code{df - 1} knots if \code{base_haz = "piecewise"}, which are
placed at equally spaced percentiles of the distribution of
observed event times.}

\item{quadnodes}{The number of nodes to use for the Gauss-Kronrod quadrature
that is used to evaluate the cumulative hazard in the likelihood function. 
Options are 15 (the default), 11 or 7.}

\item{subsetLong, subsetEvent}{Same as subset in \code{\link[stats]{glm}}.
However, if fitting a multivariate joint model and a list of data frames 
is provided in \code{dataLong} then a corresponding list of subsets 
must be provided in \code{subsetLong}.}

\item{na.action, contrasts}{Same as \code{\link[stats]{glm}}, but rarely 
specified.}

\item{weights}{Experimental and should be used with caution. 
The user can optionally supply a 2-column data frame containing a set of
'prior weights' to be used in the estimation process. The data frame should
contain two columns: the first containing the IDs for each individual, and 
the second containing the corresponding weights. The data frame should only
have one row for each individual; that is, weights should be constant 
within individuals.}

\item{offset}{Not yet implemented. Same as \code{\link[stats]{glm}}.}

\item{centreLong, centreEvent}{A logical specifying whether the predictor
matrix for the longitudinal submodel(s) or event submodel should be 
centred.}

\item{init}{The method for generating the initial values for the MCMC.
The default is \code{"model_based"}, which uses those obtained from 
fitting separate longitudinal and time-to-event models prior  
to fitting the joint model. Parameters that cannot be obtained from 
fitting separate longitudinal and time-to-event models are initialised 
at 0. This provides reasonable initial values which should aid the MCMC
sampler. However, it is recommended that any final analysis should be
performed with several MCMC chains each initiated from a different
set of initial values; this can be obtained by setting
\code{init = "random"}. Other possibilities for specifying \code{init}
are those described for \code{\link[rstan]{stan}}.}

\item{...}{Further arguments passed to 
\code{\link[rstan]{sampling}} (e.g. \code{iter}, \code{chains}, 
\code{cores}, etc.).}

\item{priorLong, priorEvent, priorAssoc}{The prior distributions for the 
regression coefficients in the longitudinal submodel(s), event submodel,
and the association parameter(s). 
Can be a call to \code{normal}, \code{student_t},
\code{cauchy}, \code{hs} or \code{hs_plus}. See \code{\link{priors}} for
details. To to omit a prior --- i.e., to use a flat (improper) uniform
prior --- set equal to \code{NULL}.}

\item{priorLong_intercept, priorEvent_intercept}{The prior distributions
for the intercepts in the longitudinal submodel(s) and event submodel.
Can be a call to \code{normal}, \code{student_t} or
\code{cauchy}. See \code{\link{priors}} for details. To to omit a prior
--- i.e., to use a flat (improper) uniform prior --- set
equal to \code{NULL}. (\strong{Note:} If \code{centreLong} or 
\code{centreEvent} is set to \code{TRUE} then the prior
distribution for the intercept is set so it applies to the value when all
predictors are centered).}

\item{priorLong_ops, priorEvent_ops, priorAssoc_ops}{Additional options 
related to prior distributions for the longitudinal submodel(s),
event submodel, and the association parameter(s). To omit a prior on the 
dispersion parameters in the longitudinal submodel(s) set 
\code{priorLong_ops} to \code{NULL}. To omit a prior on the 
Weibull shape parameter (if \code{base_haz = "weibull"}) or the
spline coefficients (if \code{base_haz = "splines"}) set 
\code{priorEvent_ops} to \code{NULL}. Otherwise see \code{\link{priors}}.}

\item{prior_covariance}{Cannot be \code{NULL}; see \code{\link{decov}} for
more information about the default arguments.}

\item{prior_PD}{A logical (defaulting to \code{FALSE}) indicating
whether to draw from the prior predictive distribution instead of
conditioning on the data.}

\item{adapt_delta}{See \code{\link[rstanarm]{adapt_delta}} for details.}

\item{max_treedepth}{A positive integer specifying the maximum treedepth 
for the non-U-turn sampler. See the \code{control} argument in 
\code{\link[rstan]{stan}}.}

\item{QR}{QR decomposition of the predictor matrix. Not yet implemented.}

\item{algorithm}{Character string (possibly abbreviated) indicating the 
estimation approach to use. Currently, only "sampling" (for MCMC) is 
allowed.}

\item{debug}{Should not be used. This is used in package development to
help identify the location of bugs in the Stan code. When set to 
\code{TRUE}, the Stan file executes several print statements which 
can help to identify the location of bugs or numerical instabilities.}
}
\value{
A \link[=stanjm-object]{stanjm} object is returned.
}
\description{
Fits a shared parameter joint model for longitudinal and time-to-event 
(e.g. survival) data under a Bayesian framework using Stan.
}
\details{
The \code{stan_jm} function can be used to fit a joint model (also 
  known as a shared parameter model) for longitudinal and time-to-event data 
  under a Bayesian framework. 
  The joint model may be univariate (with only one longitudinal submodel) or
  multivariate (with more than one longitudinal submodel). Multi-level 
  clustered data are allowed (e.g. patients within clinics), provided that the
  individual (e.g. patient) is the lowest level of clustering. The underlying
  estimation is carried out using the Bayesian C++ package Stan 
  (\url{http://mc-stan.org/}). \cr
  \cr 
  For the longitudinal submodel a generalised linear mixed model is assumed 
  with any of the \code{\link[stats]{family}} choices allowed by 
  \code{\link[lme4]{glmer}}. \cr
  \cr
  For the event submodel a parametric
  proportional hazards model is assumed. The baseline hazard can be estimated 
  using either a Weibull distribution (\code{base_haz = "weibull"}) or 
  approximated using restricted cubic splines (\code{base_haz = "splines"}). 
  If cubic splines are used then the degrees of freedom for the 
  splines, or the internal knot locations, can be optionally specified. If
  the degrees of freedom are specified (through the \code{df} argument) then
  the knot locations are automatically generated based
  on the distribution of observed event times (not including censoring times)
  -- see \code{\link[splines]{ns}} for details on the default knot placement. 
  Otherwise the internal knot locations can be specified 
  directly through the \code{knots} argument. If neither \code{df} or
  \code{knots} is specified, then the default is to set \code{df} equal to 3.
  It is not possible to specify both \code{df} and \code{knots}. \cr
  \cr
  The association structure for the joint model can be based on any of the 
  following parameterisations: current value of the linear predictor in the 
  longitudinal submodel (\code{"etavalue"}); first derivative 
  (slope) of the linear predictor in the longitudinal submodel 
  (\code{"etaslope"}); current expected value of the longitudinal submodel 
  (\code{"muvalue"}); shared individual-level random effects 
  (\code{"shared_b"}); shared individual-level random effects which also
  incorporate the corresponding fixed effect as well as any corresponding 
  random effects for clustering levels higher than the individual)
  (\code{"shared_coef"}); or no 
  association structure (equivalent to fitting separate longitudinal 
  and event models) (\code{"null"} or \code{NULL}). 
  More than one association structure can be specified, however,
  not all possible combinations are allowed.   
  By default, \code{"shared_b"} and \code{"shared_coef"} contribute all 
  random effects to the association structure; however, a subset of the random effects can 
  be chosen by specifying their indices between parentheses as a suffix, for 
  example, "shared_b(1)" or "shared_b(1:3)" or "shared_b(1,2,4)", and so on. \cr
  \cr
  Time-varying covariates are allowed in both the 
  longitudinal and event submodels. These should be specified in the data 
  in the same way as they normally would when fitting a separate 
  longitudinal model using \code{\link[lme4]{lmer}} or a separate 
  time-to-event model using \code{\link[survival]{coxph}}. These time-varying
  covariates should be exogenous in nature, otherwise they would perhaps 
  be better specified as an additional outcome (i.e. by including them as an 
  additional longitudinal outcome/submodel in the joint model). \cr
  \cr
  Bayesian estimation of the joint model is performed via MCMC. The Bayesian  
  model includes independent priors on the 
  regression coefficients for both the longitudinal and event submodels, 
  including the association parameter(s) (in much the same way as the
  regression parameters in \code{\link{stan_glm}}) and
  priors on the terms of a decomposition of the covariance matrices of the
  group-specific parameters (in the same way as \code{\link{stan_glmer}}). 
  See \code{\link{priors}} for more information about the priors distributions
  that are available. \cr
  \cr
  Gauss-Kronrod quadrature is used to numerically evaluate the integral  
  over the cumulative hazard in the likelihood function for the joint model.
  The accuracy of the numerical approximation can be controlled using the
  number of quadrature nodes, specified through the \code{quadnodes} 
  argument. Using a higher number of quadrature nodes will result in a more 
  accurate approximation.
}
\examples{
\donttest{
#####
# Univariate joint model, with association structure based on the 
# current value of the linear predictor
f1 <- stan_jm(formulaLong = logBili ~ year + (1 | id), 
              dataLong = pbcLong_subset,
              formulaEvent = Surv(futimeYears, death) ~ sex + trt, 
              dataEvent = pbcSurv_subset,
              time_var = "year",
              chains = 1, iter = 1000, warmup = 500)
summary(f1) 
        
#####
# Univariate joint model, with association structure based on the 
# current value of the linear predictor and shared random intercept
f2 <- stan_jm(formulaLong = logBili ~ year + (1 | id), 
              dataLong = pbcLong_subset,
              formulaEvent = Surv(futimeYears, death) ~ sex + trt, 
              dataEvent = pbcSurv_subset,
              assoc = c("etavalue", "shared_b"),
              time_var = "year",
              chains = 1, iter = 1000, warmup = 500)
summary(f2)          

######
# Multivariate joint model, with association structure based 
# on the current value of the linear predictor in each longitudinal 
# submodel and shared random intercept from the second longitudinal 
# submodel only (which is the first random effect in that submodel
# and is therefore indexed the '(1)' suffix in the code below)
mv1 <- stan_jm(
        formulaLong = list(
          logBili ~ year + (1 | id), 
          albumin ~ sex + year + (1 + year | id)),
        dataLong = pbcLong_subset,
        formulaEvent = Surv(futimeYears, death) ~ sex + trt, 
        dataEvent = pbcSurv_subset,
        assoc = list("etavalue", c("etavalue", "shared_b(1)")), 
        time_var = "year",
        chains = 1, iter = 1000, warmup = 500, refresh = 25)
summary(mv1)

# To include both the random intercept and random slope in the shared 
# random effects association structure for the second longitudinal 
# submodel, we could specify the following:
#   update(mv1, assoc = list("etavalue", c("etavalue", "shared_b"))
# which would be equivalent to:  
#   update(mv1, assoc = list("etavalue", c("etavalue", "shared_b(1,2)"))
# or:
#   update(mv1, assoc = list("etavalue", c("etavalue", "shared_b(1:2)"))     

######
# Multivariate joint model, estimated using multiple MCMC chains 
# run in parallel across all available PC cores
mv2 <- stan_jm(formulaLong = list(
        logBili ~ year + (1 | id), 
        albumin ~ sex + year + (1 +  year | id)),
        dataLong = pbcLong_subset,
        formulaEvent = Surv(futimeYears, death) ~ sex + trt, 
        dataEvent = pbcSurv_subset,
        assoc = list("etavalue", c("etavalue", "shared_b(1)")),
        time_var = "year",
        chains = 3, iter = 1000, warmup = 500, refresh = 25,
        cores = parallel::detectCores())
summary(mv2)            
}

}
\author{
Sam Brilleman <\email{sam.brilleman@monash.edu}>. \cr
  \cr
  Whilst acknowledging this package draws heavily on code from the 
  \pkg{\link{rstanarm}} package, of which I am not an author.
}
\references{
Stan Development Team. (2015). \emph{Stan Modeling Language Users Guide and
Reference Manual.} \url{http://mc-stan.org/documentation/}
}
\seealso{
\code{\link{stanjm-object}}, \code{\link{stanjm-methods}}, 
  \code{\link{print.stanjm}}, \code{\link{summary.stanjm}},
  \code{\link{posterior_traj}}, \code{\link{posterior_survfit}}, 
  \code{\link{posterior_predict}}, \code{\link{posterior_interval}},
  \code{\link{pp_check}}, \code{\link{ps_check}}.

Also see \url{http://mc-stan.org/} for more information on the Stan C++ 
  package used for model fitting.
}

